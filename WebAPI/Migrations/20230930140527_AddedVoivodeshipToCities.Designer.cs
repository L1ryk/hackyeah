// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPI.DataSource;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20230930140527_AddedVoivodeshipToCities")]
    partial class AddedVoivodeshipToCities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.DataSource.Entities.System.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VoivodeshipId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VoivodeshipId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("WebAPI.DataSource.Entities.System.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebAPI.DataSource.Entities.System.Voivodeship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Voivodeships");
                });

            modelBuilder.Entity("WebAPI.DataSource.Entities.Univerisites.University", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("WebAPI.DataSource.Entities.Univerisites.UniversityDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ApartmentNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AvailabilityFormUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Epuap")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IconId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Krs")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nip")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PdfLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PersonManaging")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PromotionalFilmUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RecruitmentLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RecruitmentPageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Regon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SupervisoryAuthority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TercCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TercDistrict")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TercVoivodeship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UniversityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Voivodeship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Www")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UniversitiesDetails");
                });

            modelBuilder.Entity("WebAPI.DataSource.Entities.Univerisites.UniversityStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("NumberCourse")
                        .HasColumnType("integer");

                    b.Property<int>("NumberEmployees")
                        .HasColumnType("integer");

                    b.Property<int>("NumberStudents")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UniversityDetailsId")
                        .HasColumnType("uuid");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UniversityDetailsId");

                    b.ToTable("UniversityStatistics");
                });

            modelBuilder.Entity("WebAPI.DataSource.Entities.System.City", b =>
                {
                    b.HasOne("WebAPI.DataSource.Entities.System.Voivodeship", "Voivodeship")
                        .WithMany()
                        .HasForeignKey("VoivodeshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voivodeship");
                });

            modelBuilder.Entity("WebAPI.DataSource.Entities.Univerisites.UniversityStatistics", b =>
                {
                    b.HasOne("WebAPI.DataSource.Entities.Univerisites.UniversityDetails", null)
                        .WithMany("Statistics")
                        .HasForeignKey("UniversityDetailsId");
                });

            modelBuilder.Entity("WebAPI.DataSource.Entities.Univerisites.UniversityDetails", b =>
                {
                    b.Navigation("Statistics");
                });
#pragma warning restore 612, 618
        }
    }
}
